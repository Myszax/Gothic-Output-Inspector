<Window x:Class="WPFUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:WPFUI.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        xmlns:cc = "clr-namespace:WPFUI.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WPFUI"
        mc:Ignorable="d"
        FontSize="16"
        Title="Gothic OU Inspector" Height="450" Width="800">

    <Window.Resources>
        <!-- Bind the control's SelectedTreeViewItem property to the DataContext -->
        <Style TargetType="local:MainWindow">
            <Setter Property="SelectedTreeViewItem"
              Value="{Binding SelectedTreeItem}" />
        </Style>

        <CollectionViewSource Source="{Binding SelectedConversations}" x:Key="LowerDataGridCVS">
            <CollectionViewSource.GroupDescriptions>
                <dat:PropertyGroupDescription PropertyName="Context" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Number" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!-- Label that enable using `_` at the beginning -->
        <Style x:Key="LabelDisabledAccessKey" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="#27282C">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.ColumnSpan="3">
            <DockPanel>
                <Menu DockPanel.Dock="Top">
                    <MenuItem Header="_File">
                        <MenuItem Header="_Open" />
                        <MenuItem Header="_Save" />
                        <Separator />
                        <MenuItem Header="_Exit" />
                    </MenuItem>
                    <MenuItem Header="S_ettings">
                        <MenuItem Header="Path to audio files..." Command="{Binding SetPathToAudioFilesCommand}" />
                        <MenuItem Header="Encoding" ItemsSource="{Binding Encodings}">
                            <MenuItem.ItemContainerStyle>
                                <Style>
                                    <Setter Property="MenuItem.Header" Value="{Binding Encoding.HeaderName}" />
                                    <Setter Property="MenuItem.Command"
                                        Value="{Binding DataContext.ChangeEncodingCommand, RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                    <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                                    <Setter Property="MenuItem.IsCheckable" Value="True" />
                                    <Setter Property="MenuItem.IsChecked" Value="{Binding IsChecked}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </Grid>

        <Grid Grid.Row="1">
            <TextBox x:Name="ConversationCollectionFilter" Text="{Binding FilterValue, UpdateSourceTrigger=PropertyChanged, Delay=250}" />
        </Grid>

        <Grid Grid.Row="2" Grid.Column="1" Background="DarkGreen">
            <cc:DataGrid x:Name="DataGrid_Upper" Grid.Row="2"
                ItemsSource="{Binding ConversationCollection}"
                AlternatingRowBackground="#2F3136"
                      HeadersVisibility="Column" AutoGenerateColumns="False"
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True"
                CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectedItem="{Binding SelectedGridRow}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Audio">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type Window}},
                                    Path=DataContext.StartPlaybackCommand}">Play</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Inspected">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsChecked="{Binding IsInspected, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Text">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OriginalText}" TextWrapping="Wrap" Padding="10,10,10,10" MinWidth="100" Width="300" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Label Style="{StaticResource LabelDisabledAccessKey}"
                                    Content="{Binding Name}"
                                    Background="#27282C" Foreground="white"
                                    BorderBrush="Orange" BorderThickness="1"
                                       FontWeight="Bold" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>

            </cc:DataGrid>
        </Grid>


        <Grid Grid.Row="2" Grid.RowSpan="2">
            <TreeView x:Name="TreeViewMyConversationCollection" ItemsSource="{Binding ConversationCollection.Groups}"
                SelectedItemChanged="TreeView_SelectedItemChanged"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
                ScrollViewer.VerticalScrollBarVisibility="Visible">

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Items}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>
        </Grid>

        <Grid Grid.Row="3" Grid.Column="1" Background="LightBlue">
            <cc:DataGrid x:Name="DataGrid_Lower" Grid.Row="2"
                ItemsSource="{Binding Source={StaticResource LowerDataGridCVS}}"
                AlternatingRowBackground="#2F3136"
                      HeadersVisibility="Column" AutoGenerateColumns="False"
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True"
                CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectedItem="{Binding SelectedGridRow}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Label Style="{StaticResource LabelDisabledAccessKey}"
                                    Content="{Binding Name}"
                                    Background="#27282C" Foreground="white"
                                    BorderBrush="Orange" BorderThickness="1"
                                       FontWeight="Bold" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Audio">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type Window}},
                                    Path=DataContext.StartPlaybackCommand}">Play</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Inspected">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsChecked="{Binding IsInspected, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Text">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OriginalText}" TextWrapping="Wrap" Padding="10,10,10,10" MinWidth="100" Width="300" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </cc:DataGrid>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="2" x:Name="DetailedPanel" Grid.RowSpan="2" Background="green">
            <StackPanel Margin="5 5 5 5">
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5" VerticalAlignment="Center">
                    <TextBlock>Type</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Type}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>Name</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Name}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>Sound</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Sound}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>NPC Name</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.NpcName}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>Context</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Context}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>Voice</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Voice}" />
                </WrapPanel>
                <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                    <TextBlock>Number</TextBlock>
                    <TextBox Margin="15 0 0 0" IsReadOnly="True" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Number}" />
                </WrapPanel>
                <DockPanel LastChildFill="False">
                    <WrapPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock>Inspected</TextBlock>
                        <CheckBox Margin="15 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding SelectedConversation.IsInspected}" />
                    </WrapPanel>
                    <WrapPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock>Edited</TextBlock>
                        <CheckBox Margin="15 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False" IsChecked="{Binding SelectedConversation.IsEdited}" />
                    </WrapPanel>
                </DockPanel>
                <StackPanel Margin="5 15 0 5" HorizontalAlignment="Center">
                    <TextBlock HorizontalAlignment="Center">Original Text</TextBlock>
                    <TextBox VerticalScrollBarVisibility="Auto" Width="300" MinLines="3" MaxLines="10" Padding="4"
                             TextWrapping="Wrap" MouseDoubleClick="TextBox_CopyToClipboard"
                             IsReadOnly="True"
                             Text="{Binding SelectedConversation.OriginalText}" />
                </StackPanel>
                <StackPanel Margin="5 15 0 5" HorizontalAlignment="Center">
                    <TextBlock HorizontalAlignment="Center">Edited Text</TextBlock>
                    <TextBox VerticalScrollBarVisibility="Auto" Width="300" MinLines="3" MaxLines="10" Padding="4"
                             TextWrapping="Wrap" MouseDoubleClick="TextBox_CopyToClipboard"
                             SpellCheck.IsEnabled="True" Language="pl-PL"
                             Text="{Binding SelectedConversation.EditedText, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding CompareOriginalAndEditedTextCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </StackPanel>

            </StackPanel>
        </Grid>

        <Grid Grid.Row="4" Grid.ColumnSpan="3">
            <StackPanel Margin="5">
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" Text="Audio Path:" />
                    <TextBlock DockPanel.Dock="Left" Margin="3 0 0 0" Text="{Binding CurrentlyPlayingAudioName}" />
                    <TextBlock DockPanel.Dock="Right" Text="{Binding CurrentAudioLength, StringFormat=N3}" />
                    <TextBlock DockPanel.Dock="Right" Margin="3 0 3 0" Text=":" />
                    <TextBlock DockPanel.Dock="Right" Text="{Binding CurrentAudioPosition, StringFormat=N3}" />
                </DockPanel>

                <DockPanel LastChildFill="True" Margin="0 3 0 0">
                    <Slider x:Name="SeekbarControl" Minimum="0" Maximum="{Binding CurrentAudioLength, Mode=TwoWay}" Value="{Binding CurrentAudioPosition, Mode=TwoWay}"
                            IsMoveToPointEnabled="True" SmallChange="0.01" />
                </DockPanel>

                <DockPanel LastChildFill="True" Margin="0 3 0 0">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Volume:" />
                    <!-- TODO: Converter to show % -->
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5 0 0 0" Text="{Binding CurrentVolume, StringFormat=N3}" />
                    <Button DockPanel.Dock="Left" Margin="5 0 0 0" Content="{Binding IsMuted}" Command="{Binding ToggleMuteCommand}" />
                    <Slider x:Name="VolumeControl" DockPanel.Dock="Right" Margin="5 0 0 0" Minimum="0" Maximum="1" Value="{Binding CurrentVolume, Mode=TwoWay}"
                        VerticalAlignment="Center" IsMoveToPointEnabled="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                </DockPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="{Binding StateOfPlayback}" Command="{Binding StartPlaybackCommand}"/>
                    <Separator Margin="3 0 3 0"/>
                    <Button Content="Stop" Command="{Binding StopPlaybackCommand}"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="5" Grid.ColumnSpan="3" Background="Gray">
            <TextBlock>Footer</TextBlock>
        </Grid>

    </Grid>
</Window>