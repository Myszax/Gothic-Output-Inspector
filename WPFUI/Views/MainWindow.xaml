<Window x:Class="WPFUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:WPFUI.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        xmlns:cc = "clr-namespace:WPFUI.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WPFUI" xmlns:fa="http://schemas.fontawesome.com/icons/svg"
        xmlns:components="clr-namespace:WPFUI.Components"
        mc:Ignorable="d"
        FontSize="16"
        Title="{Binding Title}" Width="1280" Height="720" 
        ui:WindowHelper.UseModernWindowStyle="True">

    <Window.InputBindings>
        <KeyBinding x:Name="OpenCommand" Key="O" Modifiers="Control" Command="{Binding OpenProjectCommand}" />
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveProjectCommand}" />
        <KeyBinding Key="A" Modifiers="Control" Command="{Binding SaveProjectAsCommand}" />
        <KeyBinding Key="I" Modifiers="Control" Command="{Binding ImportFileCommand}" />
        <KeyBinding Key="P" Modifiers="Control" Command="{Binding SetPathToAudioFilesCommand}" />
    </Window.InputBindings>


    <Window.Resources>
        <CollectionViewSource Source="{Binding SelectedConversations}" x:Key="LowerDataGridCVS">
            <CollectionViewSource.GroupDescriptions>
                <dat:PropertyGroupDescription PropertyName="Context" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Number" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!-- Label that enable using `_` at the beginning -->
        <Style x:Key="LabelDisabledAccessKey" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="#FF27282C">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.ColumnSpan="3" Background="#AF000000">
            <DockPanel>
                <Menu DockPanel.Dock="Top">
                    <MenuItem Header="_File">
                        <MenuItem Header="_Open Project" Command="{Binding OpenProjectCommand}" InputGestureText="Ctrl + O" />
                        <MenuItem Header="_Save" Command="{Binding SaveProjectCommand}" InputGestureText="Ctrl + S" />
                        <MenuItem Header="S_ave As..." Command="{Binding SaveProjectAsCommand}" InputGestureText="Ctrl + A" />
                        <Separator />
                        <MenuItem Header="_Import OU File" Command="{Binding ImportFileCommand}" InputGestureText="Ctrl + I" />
                        <Separator />
                        <MenuItem Header="_Exit" Command="{Binding ExitApplicationCommand}" InputGestureText="Alt + F4" />
                    </MenuItem>
                    <MenuItem Header="_Settings">
                        <MenuItem Header="_Path to audio files..." Command="{Binding SetPathToAudioFilesCommand}" InputGestureText="Ctrl + P" />
                        <MenuItem Header="_Encoding" ItemsSource="{Binding Encodings}">
                            <MenuItem.ItemContainerStyle>
                                <Style>
                                    <Setter Property="MenuItem.Header" Value="{Binding Encoding.HeaderName}" />
                                    <Setter Property="MenuItem.Command"
                                        Value="{Binding DataContext.ChangeEncodingCommand, RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                    <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                                    <Setter Property="MenuItem.IsCheckable" Value="True" />
                                    <Setter Property="MenuItem.IsChecked" Value="{Binding IsChecked}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="3" Background="#FF18191B">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <ui:AutoSuggestBox Grid.Column="0" x:Name="ConversationCollectionFilter"
                    Text="{Binding FilterValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=250}"
                    PlaceholderText="Search..." QueryIcon="Find" />
                <DockPanel Grid.Column="1" Grid.ColumnSpan="2" LastChildFill="False">
                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" Margin="2 0 2 0">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="3 0 3 0">
                            <TextBlock VerticalAlignment="Center" Text="Search Mode:" />
                            <!--TODO: Set width by longest item length. Here is workaround for this with Grid & ItemsControl-->
                            <Grid HorizontalAlignment="Left">
                                <ItemsControl ItemsSource="{components:BindingEnums sys:StringComparison}" Height="0" Margin="15 0" Width="190" />
                                <ComboBox ItemsSource="{components:BindingEnums sys:StringComparison}" SelectedItem="{Binding SelectedComparisonMethod}" VerticalAlignment="Bottom">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:True}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </Grid>
                        </StackPanel>

                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabledFilterName}"
                            Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:True}"
                            VerticalContentAlignment="Center" Content="Name" />
                        <Rectangle Style="{StaticResource RectangleSeparator}" />

                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabledFilterOriginalText}"
                            Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:True}"
                            VerticalContentAlignment="Center" Content="Original Text" />
                        <Rectangle Style="{StaticResource RectangleSeparator}" />

                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabledFilterEditedText}"
                            Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:True}"
                            VerticalContentAlignment="Center" Content="Edited Text" />

                    </StackPanel>

                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="0 0 2 0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="3 0 3 0">
                            <TextBlock VerticalAlignment="Center" Text="Filter Mode:" />
                            <!--TODO: Set width by longest item length-->
                            <ComboBox ItemsSource="{components:BindingEnums components:FilterType}" SelectedItem="{Binding SelectedFilterType}" Width="100">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:False}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>
                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabledFilterIsInspected}"
                            Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:False}"
                            VerticalContentAlignment="Center" Content="Inspected" />
                        <Rectangle Style="{StaticResource RectangleSeparator}" />

                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsEnabledFilterIsEdited}" Margin="0 0 3 0"
                            Command="{Binding RefreshConversationCollectionCommand}" CommandParameter="{components:False}"
                            VerticalContentAlignment="Center" Content="Edited" />
                    </StackPanel>

                </DockPanel>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="1">
            <cc:DataGrid x:Name="DataGrid_Upper" Grid.Row="2"
                ItemsSource="{Binding ConversationCollection}"
                SelectionMode="Single"
                HeadersVisibility="Column" AutoGenerateColumns="False"                         
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True"
                CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectedItem="{Binding SelectedGridRow}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Audio">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type Window}},
                                    Path=DataContext.StartPlaybackCommand}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <fa:ImageAwesome Icon="Solid_Play" Height="12" Width="12" PrimaryColor="White" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Inspected">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                    IsChecked="{Binding IsInspected, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ProjectFileChangedCommand}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Text">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OriginalText}" TextWrapping="Wrap" Padding="10,10,10,10" MinWidth="100" Width="300" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Label Style="{StaticResource LabelDisabledAccessKey}"
                                    Content="{Binding Name}"
                                    Foreground="DarkOrange"
                                    FontWeight="Bold" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>

            </cc:DataGrid>
        </Grid>


        <Grid Grid.Row="2" Grid.RowSpan="2">
            <TreeView x:Name="TreeViewMyConversationCollection" ItemsSource="{Binding ConversationCollection.Groups}"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
                ScrollViewer.VerticalScrollBarVisibility="Visible">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SelectedTreeItemChangedCommand}"
                            CommandParameter="{Binding ElementName=TreeViewMyConversationCollection, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Items}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Path=Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>
        </Grid>

        <Grid Grid.Row="3" Grid.Column="1">
            <cc:DataGrid x:Name="DataGrid_Lower" Grid.Row="2"
                ItemsSource="{Binding Source={StaticResource LowerDataGridCVS}}"
                SelectionMode="Single"
                HeadersVisibility="Column" AutoGenerateColumns="False"
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True"
                CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectedItem="{Binding SelectedGridRow}"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">

                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Label Style="{StaticResource LabelDisabledAccessKey}"
                                    Content="{Binding Name}"
                                    Foreground="DarkOrange"
                                    FontWeight="Bold" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Audio">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type Window}},
                                    Path=DataContext.StartPlaybackCommand}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <fa:ImageAwesome Icon="Solid_Play" Height="12" Width="12" PrimaryColor="White" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTemplateColumn Header="Inspected">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                    IsChecked="{Binding IsInspected, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ProjectFileChangedCommand}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Text">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OriginalText}" TextWrapping="Wrap" Padding="10,10,10,10" MinWidth="100" Width="300" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </cc:DataGrid>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="2" x:Name="DetailedPanel" Grid.RowSpan="2">
            <ScrollViewer>
                <StackPanel Margin="5 5 5 5">
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5" VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center">Type</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Type}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">Name</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Name}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">Sound</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Sound}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">NPC Name</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.NpcName}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">Context</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Context}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">Voice</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Voice}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" Margin="5 5 0 5">
                        <TextBlock VerticalAlignment="Center">Number</TextBlock>
                        <TextBox Style="{StaticResource SmoothTexBox}" MouseDoubleClick="TextBox_CopyToClipboard" Text="{Binding SelectedConversation.Number}" />
                    </WrapPanel>
                    <DockPanel LastChildFill="False">
                        <WrapPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="5 5 0 5">
                            <TextBlock VerticalAlignment="Center">Inspected</TextBlock>
                            <CheckBox Margin="15 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding SelectedConversation.IsInspected}"
                            Command="{Binding ProjectFileChangedCommand}"/>
                        </WrapPanel>
                        <WrapPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5 5 0 5">
                            <TextBlock VerticalAlignment="Center">Edited</TextBlock>
                            <CheckBox Margin="15 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" IsHitTestVisible="False" IsChecked="{Binding SelectedConversation.IsEdited}" />
                        </WrapPanel>
                    </DockPanel>
                    <StackPanel Margin="5 15 0 5" HorizontalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center">Original Text</TextBlock>
                        <TextBox VerticalScrollBarVisibility="Auto" Width="300" MinLines="3" MaxLines="10" Padding="4"
                             TextWrapping="Wrap" MouseDoubleClick="TextBox_CopyToClipboard"
                             IsReadOnly="True"
                             Text="{Binding SelectedConversation.OriginalText}" />
                    </StackPanel>
                    <StackPanel Margin="5 15 0 5" HorizontalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center">Edited Text</TextBlock>
                        <TextBox VerticalScrollBarVisibility="Auto" Width="300" MinLines="3" MaxLines="10" Padding="4"
                             TextWrapping="Wrap" MouseDoubleClick="TextBox_CopyToClipboard"
                             SpellCheck.IsEnabled="True" Language="pl-PL"
                             Text="{Binding SelectedConversation.EditedText, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding CompareOriginalAndEditedTextCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>

                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Grid Grid.Row="4" Grid.ColumnSpan="3" Background="#FF18191B">
            <StackPanel Margin="5">
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" Text="Audio Path:" />
                    <TextBlock DockPanel.Dock="Left" Margin="3 0 0 0" Text="{Binding CurrentlyPlayingAudioName}" />
                    <TextBlock DockPanel.Dock="Right" Text="{Binding CurrentAudioLength, StringFormat=N3}" />
                    <TextBlock DockPanel.Dock="Right" Margin="3 0 3 0" Text=":" />
                    <TextBlock DockPanel.Dock="Right" Text="{Binding CurrentAudioPosition, StringFormat=N3}" />
                </DockPanel>

                <DockPanel LastChildFill="True" Margin="0 3 0 0">
                    <Slider x:Name="SeekbarControl" Minimum="0" Maximum="{Binding CurrentAudioLength, Mode=TwoWay}" Value="{Binding CurrentAudioPosition, Mode=TwoWay}"
                            IsMoveToPointEnabled="True" SmallChange="0.01" />
                </DockPanel>

                <DockPanel LastChildFill="True" Margin="0 3 0 0">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Volume:" />
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5 0 0 0" Width="50" Text="{Binding CurrentVolume, Converter={StaticResource VolumeConverter}}" />
                    <Button DockPanel.Dock="Left" Margin="5 0 0 0" Command="{Binding ToggleMuteCommand}">
                        <fa:ImageAwesome Icon="{Binding IsMuted, Converter={StaticResource MuteButtonConverter}}" Height="20" Width="20" PrimaryColor="DarkCyan" />
                    </Button>
                    <Slider x:Name="VolumeControl" DockPanel.Dock="Right" Margin="5 0 0 0" Minimum="0" Maximum="1" Value="{Binding CurrentVolume, Mode=TwoWay}"
                        VerticalAlignment="Center" IsMoveToPointEnabled="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                </DockPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Command="{Binding StartPlaybackCommand}">
                        <fa:ImageAwesome Icon="{Binding StateOfPlayback, Converter={StaticResource PlaybackStateConverter}}" Height="20" PrimaryColor="DarkCyan" />
                    </Button>
                    <Separator Margin="3 0 3 0"/>
                    <Button Command="{Binding StopPlaybackCommand}">
                        <fa:ImageAwesome Icon="Solid_Stop" Height="20" PrimaryColor="DarkCyan" />
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="5" Grid.ColumnSpan="3" Background="#AF000000">
            <Grid Margin="1 0 1 2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <TextBlock Margin="3 0 0 0" Text="{Binding FilteredConversationsCount, StringFormat=Filtered: {0:N0}/}" />
                    <TextBlock Text="{Binding LoadedConversationsCount, StringFormat={}{0:N0}}" />
                </StackPanel>
                <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding LoadedNPCsCount, StringFormat=NPCs: {0:N0}}" />
                <TextBlock Grid.Column="2" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource PercentageCoverageConverter}" StringFormat="Inspected: {0}">
                            <Binding Path="InspectedConversationsCount" />
                            <Binding Path="LoadedConversationsCount" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Grid.Column="3" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource PercentageCoverageConverter}" StringFormat="Edited: {0}">
                            <Binding Path="EditedConversationsCount" />
                            <Binding Path="LoadedConversationsCount" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Grid.Column="4" HorizontalAlignment="Center" Text="{Binding SelectedConversations.Count, StringFormat=Current NPC: {0:N0}}" />
                <TextBlock Grid.Column="5" Margin="0 0 3 0" HorizontalAlignment="Right" Text="{Binding UsedEncoding.HeaderName, StringFormat=Encoding: {0}}" />
            </Grid>
        </Grid>

    </Grid>
</Window>